<?xml version="1.0" encoding="utf-8" ?> 
<page class="XhtmlFields.XhtmlFields, XhtmlFields"> 
<head>
	<title>nothing can stop me I'm all the way up</title>
	<meta name="description" content="nothing can stop me I'm all the way up$"/>
</head>
<body bgcolor="$$$Var3$$$"><k/>
<h1> $$$Var1$$$ Rules!! </h1>
<form method="POST">
	Tell me who rules the world: 
	<input type="text" name="Var1" />
		<input type="text" name="Var3" />
		<input type="submit"/>
		<br/>
		<p>
		Lex helps write programs whose control flow is directed by instances of regular expressions in the input stream. It is well suited for editor-script type transformations and for segmenting input in preparation for a parsing routine.
Lex source is a table of regular expressions and corresponding program fragments. The table is translated to a program which reads an input stream, copying it to an output stream and partitioning the input into strings which match the given expressions. As each such string is recognized the corresponding program fragment is executed. The recognition of the expressions is performed by a deterministic finite automaton generated by Lex. The program fragments written by the user are executed in the order in which the corresponding regular expressions occur in the input stream.

The lexical analysis programs written with Lex accept ambiguous specifications and choose the longest match possible at each input point. If necessary, substantial lookahead is performed on the input, but the input stream will be backed up to the end of the current partition, so that the user has general freedom to manipulate it.

Lex can generate analyzers in either C or Ratfor, a language which can be translated automatically to portable Fortran. It is available on the PDP-11 UNIX, Honeywell GCOS, and IBM OS systems. This manual, however, will only discuss generating analyzers in C on the UNIX system, which is the only supported form of Lex under UNIX Version 7. Lex is designed to simplify interfacing with Yacc, for those with access to this compiler-compiler system.

1. Introduction.
</p>
</form>
</body>
</page>
